from src.domain.entities.user import FullUserInfoDM
bfrom src.application.common.const import SECONDS_TO_SEND_GIFT


def get_buy_gift_text(type_name: str, gift_number: int) -> str:
    return (
        f"üí∞ Your gift was bought - <b>{type_name} #{gift_number}</b>\n\n"
        f"üì§ Confirm or cancel the order in the app"
    )


def get_cancel_gift_text(type_name: str, gift_number: int) -> str:
    return (
        f"‚ùó The buyer canceled the purchase of your gift - <b>{type_name} #{gift_number}</b>\n\n"
        "‚ö†Ô∏è <b>Don't transfer your gift! If the transfer has occurred, please contact support</b>"
    )


def get_seller_accept_text(type_name: str, gift_number: int) -> str:
    return (
        f"‚úÖ The seller accepted your deal for a gift - <b>{type_name} #{gift_number}</b>\n\n"
        f"üïë Wait for the seller to send you a gift and you will receive a notification in the bot"
    )


def get_seller_cancel_text(type_name: str, gift_number: int) -> str:
    return (
        f"‚ùå The seller canceled your gift order - <b>{type_name} #{gift_number}</b>\n\n"
        f"üí∏ The TONs have been returned to your balance in the app"
    )


def get_confirm_transfer_text(type_name: str, gift_number: int) -> str:
    return (
        f"‚úÖ The seller transferred you a gift - <b>{type_name} #{gift_number}</b>\n\n"
        "Go to the market and confirm receipt of the gift\n\n"
        "‚ö†Ô∏è <i>Be sure to check if you have received the gift for real!"
        "Check your profile, and only then confirm receipt!</i>"
    )


def get_accept_transfer_text(type_name: str, gift_number: int) -> str:
    return f"‚úÖ The order was completed successfully - <b>{type_name} #{gift_number}</b>"


def get_withdraw_request_text(username: str | None, user_id: int, amount: float, wallet: str) -> str:
    username_text = "" if not username else f"@{username} "
    return (
        f"üëõ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username_text}#<code>{user_id}</code>"
        f"\n\n–°—É–º–º–∞: <b>{amount}</b> TON\n–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: <code>{wallet}</code>"
    )


def get_start_text() -> str:
    return (
        "üéÅ <b>The best gift market in Telegram is already here!</b>\n\n"
        "üî• Buy and sell gifts quickly and securely!"
    )


def get_deposit_text(
    username: str | None, user_id: int, is_testnet: bool, ton_amount: float, hash: str
) -> str:
    user_data_text = f"{f'@{username}' if username else ''} #<code>{user_id}</code>"
    link_text = "testnet." if is_testnet else ""
    return (
        f"üí∏ {user_data_text.strip()} –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å –Ω–∞ {ton_amount} TON\n\n"
        f"üîó <b><a href='https://{link_text}tonviewer.com/transaction/{hash}'>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è</a></b>"
    )


def get_canceled_text_to_owner(username: str | None, user_id: int) -> str:
    username_text = "" if not username else f"@{username} "
    return (
        f"‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username_text}#<code>{user_id}</code> –æ—Ç–º–µ–Ω–∏–ª –ø–æ–∫—É–ø–∫—É –ø–æ–¥–∞—Ä–∫–∞!\n\n"
        "‚ö†Ô∏è –ï—Å–ª–∏ –æ–Ω —Å–æ–∑–¥–∞—Å—Ç –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ –ø–µ—Ä–µ–¥–∞–ª –µ–º—É –ø–æ–¥–∞—Ä–æ–∫"
    )


def get_admin_text(count_users: int, count_gifts: int) -> str:
    return (
        f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>: {count_users}\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤</b>: {count_gifts}"
    )


def get_seller_canceled_admin_text(username: str | None, user_id: int) -> str:
    username_text = "" if not username else f"@{username} "
    return (
        f"‚ùó {username_text}#<code>{user_id}</code> –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–¥–∞—Ä–æ–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ {SECONDS_TO_SEND_GIFT} –º–∏–Ω—É—Ç. "
        "–°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!"
        "\n\n‚ö†Ô∏è –ï—Å–ª–∏ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–∞—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —Å–¥–µ–ª–∫—É, "
        "–≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏–≤ <code>/ban [user id]</code>"
    )


def get_full_user_info_text(user_info_data: FullUserInfoDM) -> str:
    username_text = f"üë®‚Äçü¶± <b>Username</b>: <b>@{user_info_data.username}</b>\n"
    first_name_text = f"üóø <b>–ò–º—è</b>: <b>@{user_info_data.first_name}</b>\n"
    if not user_info_data.username:
        username_text = ""
    if not user_info_data.first_name:
        first_name_text = ""

    orders_text = f"\nüõçÔ∏è <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞: </b>"
    for order in user_info_data.orders[:7]:
        user_text = "–ø–æ–∫—É–ø–∞—Ç–µ–ª—å" if order.buyer_id == user_info_data.id else "–ø—Ä–æ–¥–∞–≤–µ—Ü"
        completed_date_text = "\n"
        if order.completed_order_date:
            completed_date_text = f"\n<b>–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: </b>{order.completed_order_date}\n"
        orders_text += (
            f"\n<b>ID: </b>{order.id}\n<b>–ü–æ–¥–∞—Ä–æ–∫</b>:  <b>{order.type} #{order.number}</b>"
            f"\n<b>–¶–µ–Ω–∞: </b>{order.price}\n<b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: </b>{order.created_order_date}"
            f"<b>–°—Ç–∞—Ç—É—Å: </b>{order.status.name}\n<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: </b>{user_text}{completed_date_text}"
        )
    if not user_info_data.orders:
        orders_text = ""

    withdraws_text = f"\nüëõ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–≤–æ–¥—ã:</b>"
    for withdraw in user_info_data.withdraw_requests[:5]:
        withdraws_text += f"\n<code>{withdraw.wallet}</code> - {withdraw.amount} TON"
    if not user_info_data.withdraw_requests:
        withdraws_text = ""

    return (
        f"üîí ID: <code>{user_info_data.id}</code>\n"
        f"{username_text}"
        f"{first_name_text}"
        f"üí∞ <b>–ë–∞–ª–∞–Ω—Å: </b>{user_info_data.balance:.2f} TON\n"
        f"üìÖ <b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: </b>{user_info_data.created_at.strftime("%d.%m.%y, %H:%M")}\n"
        f"{orders_text.rstrip()}"
        f"{withdraws_text}\n"
        f"üí∏ <b>–û–±—â–∞—è –≤—ã–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞: </b>{user_info_data.total_withdrawn} TON"
    )
